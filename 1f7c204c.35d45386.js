(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{100:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return T})),n.d(t,"metadata",(function(){return v})),n.d(t,"toc",(function(){return O})),n.d(t,"default",(function(){return j}));var o=n(3),a=n(7),i=n(0),l=n.n(i),r=n(103),u=n(107),s=n(114),d=n(104),c=n(75),p=n.n(c),b=37,h=39;var m=function(e){var t=e.lazy,n=e.block,o=e.defaultValue,a=e.values,r=e.groupId,u=e.className,c=Object(s.a)(),m=c.tabGroupChoices,g=c.setTabGroupChoices,T=Object(i.useState)(o),v=T[0],O=T[1],f=i.Children.toArray(e.children);if(null!=r){var j=m[r];null!=j&&j!==v&&a.some((function(e){return e.value===j}))&&O(j)}var y=function(e){O(e),null!=r&&g(r,e)},w=[];return l.a.createElement("div",null,l.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(d.a)("tabs",{"tabs--block":n},u)},a.map((function(e){var t=e.value,n=e.label;return l.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":v===t,className:Object(d.a)("tabs__item",p.a.tabItem,{"tabs__item--active":v===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case h:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case b:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e)},onFocus:function(){return y(t)},onClick:function(){y(t)}},n)}))),t?Object(i.cloneElement)(f.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):l.a.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return Object(i.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))};var g=function(e){var t=e.children,n=e.hidden,a=e.className;return l.a.createElement("div",Object(o.a)({role:"tabpanel"},{hidden:n,className:a}),t)},T={id:"components",title:"Component Kit"},v={unversionedId:"components",id:"components",isDocsHomePage:!1,title:"Component Kit",description:"Check out all of these components that can do so many things!",source:"@site/docs/components.md",slug:"/components",permalink:"/docs/docs/components",editUrl:"https://github.com/uscmakers/docs/edit/main/docs/components.md",version:"current",sidebar:"someSidebar",previous:{title:"Adafruit Clue",permalink:"/docs/docs/clue"},next:{title:"Dope Robot",permalink:"/docs/docs/samples/dope-robot"}},O=[{value:"7-color Flash LED",id:"7-color-flash-led",children:[]},{value:"Analog Hall Effect Sensor",id:"analog-hall-effect-sensor",children:[]},{value:"Analog Temperature Sensor",id:"analog-temperature-sensor",children:[]},{value:"Avoidance Sensor",id:"avoidance-sensor",children:[]},{value:"Ball Switch",id:"ball-switch",children:[]},{value:"Button",id:"button",children:[]},{value:"Buzzer",id:"buzzer",children:[]},{value:"Digital Temperature Sensor",id:"digital-temperature-sensor",children:[]},{value:"Flame Sensor",id:"flame-sensor",children:[]},{value:"Hall Effect Sensor",id:"hall-effect-sensor",children:[]},{value:"Heartbeat Sensor",id:"heartbeat-sensor",children:[]},{value:"IR Emitter",id:"ir-emitter",children:[]},{value:"IR Reciever",id:"ir-reciever",children:[]},{value:"Joystick",id:"joystick",children:[]},{value:"Large Microphone",id:"large-microphone",children:[]},{value:"Laser",id:"laser",children:[]},{value:"Light Blocking Module",id:"light-blocking-module",children:[]},{value:"Light Cup",id:"light-cup",children:[]},{value:"Linear Hall Effect Sensor",id:"linear-hall-effect-sensor",children:[]},{value:"Mini Reed Switch",id:"mini-reed-switch",children:[]},{value:"Passive Buzzer",id:"passive-buzzer",children:[]},{value:"Photo Resistor",id:"photo-resistor",children:[]},{value:"RGB LED",id:"rgb-led",children:[]},{value:"Reed Switch",id:"reed-switch",children:[]},{value:"Relay",id:"relay",children:[]},{value:"Rotary Encoder",id:"rotary-encoder",children:[]},{value:"SMD RGB",id:"smd-rgb",children:[]},{value:"Shock Sensor",id:"shock-sensor",children:[]},{value:"Small Microphone",id:"small-microphone",children:[]},{value:"TEMP 18B20 Sensor",id:"temp-18b20-sensor",children:[]},{value:"Tap Module",id:"tap-module",children:[]},{value:"Temperature and Humidity Sensor",id:"temperature-and-humidity-sensor",children:[]},{value:"Tilt Switch",id:"tilt-switch",children:[]},{value:"Touch Sensor",id:"touch-sensor",children:[]},{value:"Tracking Sensor",id:"tracking-sensor",children:[]},{value:"Two-color LED",id:"two-color-led",children:[]},{value:"Two-color LED 2",id:"two-color-led-2",children:[]}],f={toc:O};function j(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},f,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Check out all of these components that can do so many things!"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"7-color-flash-led"},"7-color Flash LED"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"7-color Flash LED",src:Object(u.a)("img/components/7-color_flash_led.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"analog-hall-effect-sensor"},"Analog Hall Effect Sensor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Analog Hall Effect Sensor",src:Object(u.a)("img/components/analog_hall_effect_sensor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"analog-temperature-sensor"},"Analog Temperature Sensor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Analog Temperature Sensor",src:Object(u.a)("img/components/analog_temperature_sensor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"avoidance-sensor"},"Avoidance Sensor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Avoidance Sensor",src:Object(u.a)("img/components/avoidance_sensor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"ball-switch"},"Ball Switch"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Ball Switch",src:Object(u.a)("img/components/ball_switch.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"button"},"Button"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Button",src:Object(u.a)("img/components/button.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"buzzer"},"Buzzer"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Buzzer",src:Object(u.a)("img/components/buzzer.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"digital-temperature-sensor"},"Digital Temperature Sensor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Digital Temperature Sensor",src:Object(u.a)("img/components/digital_temperature_sensor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"flame-sensor"},"Flame Sensor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Flame Sensor",src:Object(u.a)("img/components/flame_sensor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"hall-effect-sensor"},"Hall Effect Sensor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Hall Effect Sensor",src:Object(u.a)("img/components/hall_effect_sensor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"heartbeat-sensor"},"Heartbeat Sensor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Heartbeat Sensor",src:Object(u.a)("img/components/heartbeat_sensor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"ir-emitter"},"IR Emitter"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"IR Emitter",src:Object(u.a)("img/components/ir_emitter.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"ir-reciever"},"IR Reciever"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"IR Reciever",src:Object(u.a)("img/components/ir_reciever.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"joystick"},"Joystick"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Joystick",src:Object(u.a)("img/components/joystick.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"large-microphone"},"Large Microphone"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Large Microphone",src:Object(u.a)("img/components/large_microphone.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"laser"},"Laser"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Laser",src:Object(u.a)("img/components/laser.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"light-blocking-module"},"Light Blocking Module"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Light Blocking Module",src:Object(u.a)("img/components/light_blocking_module.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"light-cup"},"Light Cup"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Light Cup",src:Object(u.a)("img/components/light_cup.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"linear-hall-effect-sensor"},"Linear Hall Effect Sensor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Linear Hall Effect Sensor",src:Object(u.a)("img/components/linear_hall_effect_sensor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"mini-reed-switch"},"Mini Reed Switch"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Mini Reed Switch",src:Object(u.a)("img/components/mini_reed_switch.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"passive-buzzer"},"Passive Buzzer"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Passive Buzzer",src:Object(u.a)("img/components/passive_buzzer.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"photo-resistor"},"Photo Resistor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Photo Resistor",src:Object(u.a)("img/components/photo_resistor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"rgb-led"},"RGB LED"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"RGB LED",src:Object(u.a)("img/components/rgb_led.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"reed-switch"},"Reed Switch"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Reed Switch",src:Object(u.a)("img/components/reed_switch.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"relay"},"Relay"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Relay",src:Object(u.a)("img/components/relay.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"rotary-encoder"},"Rotary Encoder"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Rotary Encoder",src:Object(u.a)("img/components/rotary_encoder.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"smd-rgb"},"SMD RGB"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"SMD RGB",src:Object(u.a)("img/components/smd_rgb.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"shock-sensor"},"Shock Sensor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Shock Sensor",src:Object(u.a)("img/components/shock_sensor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"small-microphone"},"Small Microphone"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Small Microphone",src:Object(u.a)("img/components/small_microphone.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"temp-18b20-sensor"},"TEMP 18B20 Sensor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"TEMP 18B20 Sensor",src:Object(u.a)("img/components/temp_18b20_sensor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"tap-module"},"Tap Module"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Tap Module",src:Object(u.a)("img/components/tap_module.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"temperature-and-humidity-sensor"},"Temperature and Humidity Sensor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Temperature and Humidity Sensor",src:Object(u.a)("img/components/temperature_and_humidity_sensor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"tilt-switch"},"Tilt Switch"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Tilt Switch",src:Object(u.a)("img/components/tilt_switch.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"touch-sensor"},"Touch Sensor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Touch Sensor",src:Object(u.a)("img/components/touch_sensor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"tracking-sensor"},"Tracking Sensor"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Tracking Sensor",src:Object(u.a)("img/components/tracking_sensor.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"two-color-led"},"Two-color LED"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Two-color LED",src:Object(u.a)("img/components/two-color_led.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"two-color-led-2"},"Two-color LED 2"),Object(r.b)("p",null,"This is a description about what the module is/does so that people will know what they can use it for!"),Object(r.b)("img",{alt:"Two-color LED 2",src:Object(u.a)("img/components/two-color_led_2.jpeg"),class:"component-image"}),Object(r.b)("p",null,"Now explain everything about how to use the module. This will include how the pins should be connected,\nwhether the microcontroller should be treating this an output or input, digital or analog, or if it should be something else entirely."),Object(r.b)(m,{defaultValue:"arduino",values:[{label:"Arduino",value:"arduino"},{label:"CircuitPython",value:"py"}],mdxType:"Tabs"},Object(r.b)(g,{value:"arduino",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-arduino"}),"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n     \n// the loop function runs over and over again forever\nvoid loop() {\n  digitalToggle(LED_BUILTIN); // turn the LED on (HIGH is the voltage level)\n  delay(500);                // wait for half a second\n}\n"))),Object(r.b)(g,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"# Import all of the necessary modules.\nimport board\nimport digitalio\nimport time\n\n# Initialize digital pin 17 as an output.\nled = digitalio.DigitalInOut(board.D17)\nled.direction = digitalio.Direction.OUTPUT\n\n# Loop forever\nwhile True:\n    led.value = True    # Turn LED on\n    time.sleep(0.5)     # Wait half a second\n    led.value = False   # Turn LED off\n    time.sleep(0.5)     # Wait half a second\n")))))}j.isMDXComponent=!0},103:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return h}));var o=n(0),a=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),d=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=d(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),c=d(n),b=o,h=c["".concat(l,".").concat(b)]||c[b]||p[b]||i;return n?a.a.createElement(h,r(r({ref:t},s),{},{components:n})):a.a.createElement(h,r({ref:t},s))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=b;var r={};for(var u in t)hasOwnProperty.call(t,u)&&(r[u]=t[u]);r.originalType=e,r.mdxType="string"==typeof e?e:o,l[1]=r;for(var s=2;s<i;s++)l[s]=n[s];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},104:function(e,t,n){"use strict";function o(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=o(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=o(e))&&(a&&(a+=" "),a+=t);return a}},107:function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return l}));var o=n(21),a=n(111);function i(){var e=Object(o.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,o){var i=void 0===o?{}:o,l=i.forcePrependBaseUrl,r=void 0!==l&&l,u=i.absolute,s=void 0!==u&&u;if(!n)return n;if(n.startsWith("#"))return n;if(Object(a.b)(n))return n;if(r)return t+n;var d=n.startsWith(t)?n:t+n.replace(/^\//,"");return s?e+d:d}(i,n,e,t)}}}function l(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},111:function(e,t,n){"use strict";function o(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!o(e)}n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return a}))},114:function(e,t,n){"use strict";var o=n(0),a=n(115);t.a=function(){var e=Object(o.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},115:function(e,t,n){"use strict";var o=n(0),a=Object(o.createContext)(void 0);t.a=a}}]);